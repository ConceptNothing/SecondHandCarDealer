// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(CarDealerDbContext))]
    [Migration("20230903144104_InitialCreateAndSeed")]
    partial class InitialCreateAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSold")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LegalPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NaturalPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LegalPersonId")
                        .IsUnique()
                        .HasFilter("[LegalPersonId] IS NOT NULL");

                    b.HasIndex("NaturalPersonId")
                        .IsUnique()
                        .HasFilter("[NaturalPersonId] IS NOT NULL");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6b68a23-41fc-47b9-9b16-0b6141144c78"),
                            CustomerType = "Natural",
                            DbCreationDate = new DateTime(2023, 9, 3, 14, 41, 4, 870, DateTimeKind.Utc).AddTicks(1051),
                            NaturalPersonId = new Guid("a3b0ba5c-f640-4d76-ae32-53590f173e1a")
                        },
                        new
                        {
                            Id = new Guid("ef167409-460e-4df9-8a21-883ce49aa711"),
                            CustomerType = "Legal",
                            DbCreationDate = new DateTime(2023, 9, 3, 14, 41, 4, 870, DateTimeKind.Utc).AddTicks(1073),
                            LegalPersonId = new Guid("a56aea8c-404c-434d-a74d-9b15c966b93e")
                        },
                        new
                        {
                            Id = new Guid("3f15f605-7c03-45a2-ad92-8aeade94d878"),
                            CustomerType = "Natural",
                            DbCreationDate = new DateTime(2023, 9, 3, 14, 41, 4, 870, DateTimeKind.Utc).AddTicks(1105),
                            NaturalPersonId = new Guid("ccea339c-6d4b-465c-a0a7-b10d9bde6b66")
                        },
                        new
                        {
                            Id = new Guid("9682d317-a31d-4e43-9a9a-ca2c9d5f9be0"),
                            CustomerType = "Legal",
                            DbCreationDate = new DateTime(2023, 9, 3, 14, 41, 4, 870, DateTimeKind.Utc).AddTicks(1120),
                            LegalPersonId = new Guid("d3db25b4-da63-4c84-a2c4-226bec0b8081")
                        });
                });

            modelBuilder.Entity("Domain.Models.LegalPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.ToTable("LegalPersons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3db25b4-da63-4c84-a2c4-226bec0b8081"),
                            CompanyName = "ABC Inc.",
                            CustomerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DbCreationDate = new DateTime(2023, 9, 3, 14, 41, 4, 870, DateTimeKind.Utc).AddTicks(893),
                            RegistrationNumber = 12345
                        },
                        new
                        {
                            Id = new Guid("a56aea8c-404c-434d-a74d-9b15c966b93e"),
                            CompanyName = "XYZ Corp.",
                            CustomerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DbCreationDate = new DateTime(2023, 9, 3, 14, 41, 4, 870, DateTimeKind.Utc).AddTicks(898),
                            RegistrationNumber = 67890
                        });
                });

            modelBuilder.Entity("Domain.Models.NaturalPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NaturalPersons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3b0ba5c-f640-4d76-ae32-53590f173e1a"),
                            CustomerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DbCreationDate = new DateTime(2023, 9, 3, 14, 41, 4, 870, DateTimeKind.Utc).AddTicks(549),
                            FirstName = "Ion",
                            LastName = "Buton"
                        },
                        new
                        {
                            Id = new Guid("ccea339c-6d4b-465c-a0a7-b10d9bde6b66"),
                            CustomerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DbCreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Radu",
                            LastName = "Bradu"
                        });
                });

            modelBuilder.Entity("Domain.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.HasOne("Domain.Models.LegalPerson", "LegalPerson")
                        .WithOne()
                        .HasForeignKey("Domain.Models.Customer", "LegalPersonId");

                    b.HasOne("Domain.Models.NaturalPerson", "NaturalPerson")
                        .WithOne()
                        .HasForeignKey("Domain.Models.Customer", "NaturalPersonId");

                    b.Navigation("LegalPerson");

                    b.Navigation("NaturalPerson");
                });

            modelBuilder.Entity("Domain.Models.Sale", b =>
                {
                    b.HasOne("Domain.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
