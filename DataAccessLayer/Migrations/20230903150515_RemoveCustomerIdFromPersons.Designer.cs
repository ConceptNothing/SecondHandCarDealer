// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(CarDealerDbContext))]
    [Migration("20230903150515_RemoveCustomerIdFromPersons")]
    partial class RemoveCustomerIdFromPersons
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSold")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LegalPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NaturalPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LegalPersonId")
                        .IsUnique()
                        .HasFilter("[LegalPersonId] IS NOT NULL");

                    b.HasIndex("NaturalPersonId")
                        .IsUnique()
                        .HasFilter("[NaturalPersonId] IS NOT NULL");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4bdca13-b5dd-4383-838e-1d9854e46dba"),
                            CustomerType = "Natural",
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8833),
                            NaturalPersonId = new Guid("04c57516-f54f-4dc8-87c1-f46616d9934a")
                        },
                        new
                        {
                            Id = new Guid("d2a1b1a9-2792-416a-bb49-6bfe6a4d311e"),
                            CustomerType = "Legal",
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8857),
                            LegalPersonId = new Guid("1a6363d4-b182-4706-adc8-340243450a7b")
                        },
                        new
                        {
                            Id = new Guid("543a5f75-4ebe-41a3-9b8b-30acce4f2e88"),
                            CustomerType = "Natural",
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8877),
                            NaturalPersonId = new Guid("78a0bbbe-85fd-445f-a124-6e88aa059b37")
                        },
                        new
                        {
                            Id = new Guid("fcc50198-a910-4793-b0cc-d7caf2fd91b3"),
                            CustomerType = "Legal",
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8893),
                            LegalPersonId = new Guid("d2db18d2-4e74-4aff-8301-71fca336f961")
                        });
                });

            modelBuilder.Entity("Domain.Models.LegalPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.ToTable("LegalPersons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2db18d2-4e74-4aff-8301-71fca336f961"),
                            CompanyName = "ABC Inc.",
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8658),
                            RegistrationNumber = 12345
                        },
                        new
                        {
                            Id = new Guid("1a6363d4-b182-4706-adc8-340243450a7b"),
                            CompanyName = "XYZ Corp.",
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8661),
                            RegistrationNumber = 67890
                        });
                });

            modelBuilder.Entity("Domain.Models.NaturalPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NaturalPersons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04c57516-f54f-4dc8-87c1-f46616d9934a"),
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8332),
                            FirstName = "Ion",
                            LastName = "Buton"
                        },
                        new
                        {
                            Id = new Guid("78a0bbbe-85fd-445f-a124-6e88aa059b37"),
                            DbCreationDate = new DateTime(2023, 9, 3, 15, 5, 15, 598, DateTimeKind.Utc).AddTicks(8338),
                            FirstName = "Radu",
                            LastName = "Bradu"
                        });
                });

            modelBuilder.Entity("Domain.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DbCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DbUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.HasOne("Domain.Models.LegalPerson", "LegalPerson")
                        .WithOne()
                        .HasForeignKey("Domain.Models.Customer", "LegalPersonId");

                    b.HasOne("Domain.Models.NaturalPerson", "NaturalPerson")
                        .WithOne()
                        .HasForeignKey("Domain.Models.Customer", "NaturalPersonId");

                    b.Navigation("LegalPerson");

                    b.Navigation("NaturalPerson");
                });

            modelBuilder.Entity("Domain.Models.Sale", b =>
                {
                    b.HasOne("Domain.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
